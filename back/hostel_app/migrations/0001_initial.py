# Generated by Django 4.2.7 on 2025-10-26 21:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status', models.CharField(choices=[('pending', 'Ожидает подтверждения'), ('active', 'Активен'), ('suspended', 'Заблокирован'), ('expired', 'Срок истёк')], default='pending', max_length=20, verbose_name='Статус')),
                ('access_until', models.DateTimeField(blank=True, null=True, verbose_name='Доступ до')),
                ('is_super_admin', models.BooleanField(default=False, verbose_name='Супер администратор')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_type', models.CharField(choices=[('single', 'Одиночная'), ('double', 'Двухъярусная')], default='single', max_length=10, verbose_name='Тип кровати')),
                ('side', models.CharField(choices=[('left', 'Левая сторона'), ('right', 'Правая сторона'), ('center', 'Центр')], default='center', max_length=10, verbose_name='Сторона')),
                ('bed_number', models.CharField(blank=True, max_length=50, verbose_name='Номер кровати')),
                ('is_occupied', models.BooleanField(default=False, verbose_name='Занято')),
                ('position', models.IntegerField(default=0, verbose_name='Позиция')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Кровать',
                'verbose_name_plural': 'Кровати',
                'ordering': ['room', 'position'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Ключ')),
                ('value', models.TextField(verbose_name='Значение')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Настройка системы',
                'verbose_name_plural': 'Настройки системы',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название комнаты')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_rooms', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
            ],
            options={
                'verbose_name': 'Комната',
                'verbose_name_plural': 'Комнаты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='ФИО')),
                ('bed_number', models.CharField(blank=True, max_length=50, verbose_name='Номер кровати')),
                ('check_in_date', models.DateField(verbose_name='Дата заселения')),
                ('check_out_date', models.DateField(verbose_name='Дата выселения')),
                ('payment_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма оплаты')),
                ('payment_status', models.CharField(choices=[('paid', 'Оплачено'), ('unpaid', 'Не оплачено'), ('partial', 'Частично оплачено')], default='unpaid', max_length=20, verbose_name='Статус оплаты')),
                ('passport_number', models.CharField(blank=True, max_length=50, verbose_name='Номер паспорта')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('bed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='residents', to='hostel_app.bed', verbose_name='Кровать')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_residents', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='residents', to='hostel_app.room', verbose_name='Комната')),
            ],
            options={
                'verbose_name': 'Жилец',
                'verbose_name_plural': 'Жильцы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='bed',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beds', to='hostel_app.room', verbose_name='Комната'),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Вход в систему'), ('logout', 'Выход из системы'), ('user_create', 'Создание пользователя'), ('user_update', 'Изменение пользователя'), ('user_delete', 'Удаление пользователя'), ('user_approve', 'Одобрение пользователя'), ('user_suspend', 'Блокировка пользователя'), ('user_unsuspend', 'Разблокировка пользователя'), ('room_create', 'Создание комнаты'), ('room_update', 'Изменение комнаты'), ('room_delete', 'Удаление комнаты'), ('resident_create', 'Создание жильца'), ('resident_update', 'Изменение жильца'), ('resident_delete', 'Удаление жильца')], max_length=50, verbose_name='Действие')),
                ('details', models.TextField(blank=True, verbose_name='Детали')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запись аудита',
                'verbose_name_plural': 'Журнал аудита',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='bed',
            unique_together={('room', 'bed_number')},
        ),
    ]
